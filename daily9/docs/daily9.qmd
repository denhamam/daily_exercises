---
title: "daily9"
name: Ainsley Denham
format: html
editor: visual

execute:
  echo: true
---
```{r}
library(datasets)
data("airquality")
library(tidyverse)
library(visdat)
```

## 2. Use vis_dat to check out the data. Does it need cleaning?
```{r}
vis_dat(airquality)
# Yes it needs cleaning there are missing values
airquality_clean <- na.omit(airquality)
```

## 3. Fit a linear model to the cleaned data to predict Ozone from one of the possible predictors of your choosing. Why did you chose thats variable?
```{r}
model <- lm(Ozone ~ Solar.R, data = airquality_clean)
```

## 4. Using summary(), Does this seem like a valid model?
```{r}
summary(model)
```

## 5. Explain the R^2 found in a sentence.
# The R^2 value is the proportion of variance in Ozone that is explained by Solar Radiation

## 6. Use broom::augment to predict the Ozone of the cleaned data
```{r}
library(broom)
a <- augment(model, data = airquality_clean)
head(a)
```

## 7. Use ggplot to plot the actual vs predicted Ozone
# Add a red line to show where the actual and predicted values are equal This can be done by plotting a 1:1 line (e.g. intercept 0, slope 1) with geom_abline(intercept = 0, slope = 1, color = "red")
# Add a subtitle to the plot showing the correlation between the actual and predicted values are equal This can be done by plotting a 1:1 line (e.g. intercept 0, slope 1) with
# paste("Correlation:", round(cor(a$Ozone, a$.fitted),2)) assuming your augmented data object is called a
```{r}
library(ggplot2)
ggplot(a, aes(x = .fitted, y = Ozone)) +
  geom_point(color = "blue", alpha = 0.5) +
  geom_abline(intercept = 0, slope = 1, color = "red") +
  labs(
    title = "Acutal vs Predicted Ozone Level", 
    x = "Predicted",
    y = "Actual",
    subtitle = paste("Correlation:", round(cor(a$Ozone, a$.fitted), 2))
  ) + 
  theme_classic()
```


